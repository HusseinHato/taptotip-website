/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TipRouteImport } from './routes/tip'
import { Route as SharetipRouteImport } from './routes/sharetip'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as EarningsRouteImport } from './routes/earnings'
import { Route as IndexRouteImport } from './routes/index'

const TipRoute = TipRouteImport.update({
  id: '/tip',
  path: '/tip',
  getParentRoute: () => rootRouteImport,
} as any)
const SharetipRoute = SharetipRouteImport.update({
  id: '/sharetip',
  path: '/sharetip',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const EarningsRoute = EarningsRouteImport.update({
  id: '/earnings',
  path: '/earnings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/earnings': typeof EarningsRoute
  '/profile': typeof ProfileRoute
  '/sharetip': typeof SharetipRoute
  '/tip': typeof TipRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/earnings': typeof EarningsRoute
  '/profile': typeof ProfileRoute
  '/sharetip': typeof SharetipRoute
  '/tip': typeof TipRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/earnings': typeof EarningsRoute
  '/profile': typeof ProfileRoute
  '/sharetip': typeof SharetipRoute
  '/tip': typeof TipRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/earnings' | '/profile' | '/sharetip' | '/tip'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/earnings' | '/profile' | '/sharetip' | '/tip'
  id: '__root__' | '/' | '/earnings' | '/profile' | '/sharetip' | '/tip'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EarningsRoute: typeof EarningsRoute
  ProfileRoute: typeof ProfileRoute
  SharetipRoute: typeof SharetipRoute
  TipRoute: typeof TipRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tip': {
      id: '/tip'
      path: '/tip'
      fullPath: '/tip'
      preLoaderRoute: typeof TipRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sharetip': {
      id: '/sharetip'
      path: '/sharetip'
      fullPath: '/sharetip'
      preLoaderRoute: typeof SharetipRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/earnings': {
      id: '/earnings'
      path: '/earnings'
      fullPath: '/earnings'
      preLoaderRoute: typeof EarningsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EarningsRoute: EarningsRoute,
  ProfileRoute: ProfileRoute,
  SharetipRoute: SharetipRoute,
  TipRoute: TipRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
